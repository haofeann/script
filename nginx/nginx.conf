user  work;
worker_processes  auto;
error_log  /data/logs/nginx/nginx_error.log  crit;
worker_rlimit_nofile 65535;
events {
    use epoll;
    worker_connections  65535;
    multi_accept on;
}
http {
    include       mime.types;
    default_type  application/octet-stream;
    add_header Access-Control-Allow-Headers X-Requested-With;
    add_header Access-Control-Allow-Methods GET,POST,OPTIONS;
    log_format main '$http_X_Real_IP $http_CLIENTIP $remote_addr $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" $request_time $upstream_response_time '
                    '"$sent_http_log_id" "$sent_http_uv_id"';
    log_format api  '$http_X_Real_IP $http_CLIENTIP $remote_addr $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" $request_time $upstream_response_time '
                    '"$sent_http_log_id" "$sent_http_uv_id" '
                    '"$http_platform_pp" "$http_build_pp" "$http_system_version_pp" "$http_system_sdk_pp" '
                    '"$http_screen_width_pp" "$http_screen_height_pp" "$http_screen_density_pp" "$http_channel_id_pp" "$http_mobile_model_pp" "$http_network_pp" '
                    '"$http_uuid" "$http_imei"';
    directio  20m;
    server_names_hash_bucket_size 256;
    client_header_buffer_size 32k;
    large_client_header_buffers 4 32k;
    client_max_body_size 20m;
    sendfile        on;
    tcp_nopush     on;
    tcp_nodelay on;
    fastcgi_connect_timeout 3000;
    fastcgi_send_timeout 3000;
    fastcgi_read_timeout 3000;
    keepalive_timeout  10;
    gzip  on;
    gzip_disable "MSIE [1-6]\."; # 禁止ie6压缩
    gzip_min_length 1k; #如果文件大于1k就启动压缩
    gzip_buffers 4 16k; #以16k为单位,按照原始数据的大小以4倍的方式申请内存空间
    gzip_http_version 1.0;
    gzip_comp_level 4; # 压缩的等级,数字选择范围是1-9,数字越小压缩的速度越快,消耗cpu就越大
    gzip_types 
        text/plain
        text/css
        text/javascript
        application/json
        application/javascript
        application/x-javascript
        application/xml
        application/x-httpd-php
        image/jpeg
        image/gif
        image/png;
    gzip_vary on;
    server_tokens off;
    server { 
        listen 80 default_server;
        listen 443;
        ssl_reject_handshake on;  # 在 IP 访问时会终止 TLS 握手，也就不会暴露域名了。
        server_name _;
        return 404;
    }
    # include enable-geoip2.conf;
    include vhost/*.conf;
}
stream {
    upstream LOGINSERVER {
        server 10.25.112.5:11600;
    }
    upstream CHANNEL1 {
        server 10.25.112.5:11601;
    }
    upstream CHANNEL2 {
        server 10.25.112.5:11602;
    }
    upstream CHANNEL3 {
        server 10.25.112.5:11603;
    }
    upstream CHANNEL4 {
        server 10.25.112.5:11604;
    }
    upstream CHANNEL5 {
        server 10.25.112.5:11605;
    }
    upstream CHANNEL6 {
        server 10.25.112.5:11606;
    }
    upstream CHANNEL7 {
        server 10.25.112.5:11607;
    }
    upstream CHANNEL8 {
        server 10.25.112.5:11608;
    }
    server {  	
        listen 11600;  
        proxy_pass LOGINSERVER;  
    }
    server {  	
        listen 11601;  
        proxy_pass CHANNEL1;  
    }
    server {  	
        listen 11602;  
        proxy_pass CHANNEL2;  
    }
    server {  	
        listen 11603;  
        proxy_pass CHANNEL3;  
    }
    server {  	
        listen 11604;  
        proxy_pass CHANNEL4;  
    }
    server {  	
        listen 11605;  
        proxy_pass CHANNEL5;  
    }
    server {  	
        listen 11606;  
        proxy_pass CHANNEL6;  
    } 
    server {  	
        listen 11607;  
        proxy_pass CHANNEL7;  
    } 
    server {  	
        listen 11608;  
        proxy_pass CHANNEL8;  
    } 
}